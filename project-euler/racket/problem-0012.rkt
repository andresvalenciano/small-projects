#lang racket

#| http://projecteuler.net/problem=12

The sequence of triangle numbers is generated by adding the natural numbers. So
the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten
terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
|#


(define (divides? m n)
  (= 0 (remainder m n)))

(define (divisors n)
  (for/list ([i (in-range 1 (+ n 1))]
             #:when (divides? n i))
    i))

(define (count-divisors n)
  (+ (if (integer? (sqrt n)) 1 0)
     (for/sum ([i (in-range 1 (sqrt n))]
               #:when (divides? n i))
       2)))
    
(define (triangle-divisors-over n)
  (call/cc
   (lambda (return)
     (for/fold ([tri 0])
               ([i (in-naturals 1)])
       (when (> (count-divisors tri) n)
         (return tri))
       (+ i tri)))))



